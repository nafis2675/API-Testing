{
	"info": {
		"_postman_id": "28147e62-908a-4336-8e15-55c694090a43",
		"name": "API Projcet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27518599"
	},
	"item": [
		{
			"name": "Creating",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstname)\r",
							"pm.environment.set(\"firstname\", firstname)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\", parseInt(totalPrice))\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"depositPaid\", Boolean(depositPaid))\r",
							"\r",
							"const moment = require('moment')\r",
							"\r",
							"var checkIn = pm.variables.replaceIn(\"{{$randomDateRecent}}\")\r",
							"checkIn = moment(checkIn).format((\"YYYY-MM-DD\"))\r",
							"console.log(checkIn)\r",
							"pm.environment.set(\"checkIn\", checkIn)\r",
							"\r",
							"var checkOut = pm.variables.replaceIn(\"{{$randomDateRecent}}\")\r",
							"checkOut = moment(checkOut).format((\"YYYY-MM-DD\"))\r",
							"console.log(checkOut)\r",
							"pm.environment.set(\"checkOut\", checkOut)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log(additionalNeeds)\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\", jsonData.bookingid)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{lastName}}\",\r\n\t\"totalprice\": \"{{totalPrice}}\",\r\n\t\"depositpaid\": \"{{depositPaid}}\",\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"{{checkIn}}\",\r\n    \t\"checkout\": \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\": \"{{additionalNeeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "TokenId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var tokenData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\", tokenData.token)   "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/auth/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"auth",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch (code) \r",
							"{\r",
							"    case 200:\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        var code = pm.response.code\r",
							"        console.log(code)\r",
							"\r",
							"        pm.test(\"Validate First Name\", function () {\r",
							"            pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Last Name\", function () {\r",
							"            pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Price\", function () {\r",
							"            pm.expect(jsonData.totalprice).to.eql(pm.environment.get(\"totalPrice\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Deposit Paid\", function () {\r",
							"            pm.expect(jsonData.depositpaid).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Check-In Date\", function () {\r",
							"            pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkIn\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Check-Out Date\", function () {\r",
							"            pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkOut\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Additional Needs\", function () {\r",
							"            pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"))\r",
							"        })\r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"        pm.test(\"Not Found\")\r",
							"    break;\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{lastName}}\",\r\n\t\"totalprice\": \"{{totalPrice}}\",\r\n\t\"depositpaid\": \"{{depositPaid}}\",\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"{{checkIn}}\",\r\n    \t\"checkout\": \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\": \"{{additionalNeeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch (code) \r",
							"{\r",
							"    case 200:\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        var code = pm.response.code\r",
							"        console.log(code)\r",
							"\r",
							"        pm.test(\"Validate First Name\", function () {\r",
							"            pm.expect(jsonData.firstname).to.eql(pm.iterationData.get(\"firstName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Last Name\", function () {\r",
							"            pm.expect(jsonData.lastname).to.eql(pm.iterationData.get(\"lastName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Price\", function () {\r",
							"            pm.expect(jsonData.totalprice).to.eql(pm.environment.get(\"totalPrice\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Deposit Paid\", function () {\r",
							"            pm.expect(jsonData.depositpaid).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Check-In Date\", function () {\r",
							"            pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkIn\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Check-Out Date\", function () {\r",
							"            pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkOut\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Validate Additional Needs\", function () {\r",
							"            pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"))\r",
							"        })\r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"        pm.test(\"Not Found\")\r",
							"    break;\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}